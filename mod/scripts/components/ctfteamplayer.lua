---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by darionco.
--- DateTime: 2021-03-04 4:11 p.m.
---
local require = _G.require;
local ShowWelcomeScreen = require('screens/CTFInstructionsPopup');
local CTF_TEAM_CONSTANTS = require('constants/CTFTeamConstants');
require('teams/CTFTeam');

local CTFTeamPlayer = Class(function(self, inst)
    self.inst = inst;
    self.teamID = nil;
    self.teamTag = nil;
    self.markerAnchor = nil;
    self.marker = nil;
    self.net = nil;

    self:initializeNetwork();
    self:initMarker();

    if TheWorld.ismastersim then
        CTFTeam.setPlayerInvincibility(CTFTeam, self.inst);
    end
end);

function CTFTeamPlayer:initializeNetwork()
    local player = self.inst;

    self.net = {
        spawnEvent = net_event(player.GUID, 'ctf_spawned_event'),
        teamID = net_tinybyte(player.GUID, 'ctf_team_id', 'ctf_team_id'),
    };

    if not TheNet:IsDedicated() then
        if player == _G.ThePlayer then
            player:ListenForEvent('ctf_spawned_event', function() self:netHandleSpawnedEvent() end);
        end

        player:ListenForEvent('ctf_team_id', function() self:netHandleTeamID() end);

        if player.player_classified then
            player.player_classified:ListenForEvent('healthdirty', function()
                local percent = player.player_classified.currenthealth:value() / player.player_classified.maxhealth:value();
                self:netHandleHealthPercent(percent);
            end);
        end
    end
end

function CTFTeamPlayer:netHandleSpawnedEvent()
    ShowWelcomeScreen(function()
        SendModRPCToServer(MOD_RPC[CTF_TEAM_CONSTANTS.RPC_NAMESPACE][CTF_TEAM_CONSTANTS.RPC.PLAYER_JOINED_CTF]);
    end);
end

function CTFTeamPlayer:netHandleTeamID()
    local player = self.inst;

    self.teamID = self.net.teamID:value();
    self.teamTag = CTFTeam.makeTeamTag(nil, self.teamID);

    if not player.data then
        player.data = {};
    end
    player.data.ctf_team_id = self.teamID;
    player.data.ctf_team_tag = self.teamTag;

    CTFTeam.patchPlayerController(nil, player, self.teamTag);
    CTFTeam.patchCombat(nil, player, self.teamTag);

    if self.marker then
        self.marker.AnimState:SetMultColour(CTFTeam:getTeamColor(self.teamID));
        self.marker.entity:Show();
    end
end

function CTFTeamPlayer:netHandleHealthPercent(percent)
    if self.marker then
        if not self.inst:HasTag('playerghost') then
            self.marker.AnimState:SetTime(3.61 * (1 - percent));
        else
            self.marker.AnimState:SetTime(3.61);
        end

    end
end

function CTFTeamPlayer:initMarker()
    self.markerAnchor = SpawnPrefab('ctf_team_marker');
    self.markerAnchor.entity:SetParent(self.inst.entity);
    self.markerAnchor.entity:Hide();
    --self.markerAnchor.AnimState:SetScale(0, 0);

    self.marker = SpawnPrefab('ctf_team_marker');
    self.marker.AnimState:PlayAnimation('health');
    self.marker.AnimState:SetDeltaTimeMultiplier(0);
    self.marker.AnimState:SetTime(0);
    self.marker.AnimState:SetScale(-1, 1);

    self.marker.Follower:FollowSymbol(self.markerAnchor.GUID, 'assets', 0, 0, 0);

    self.marker.entity:Hide();
end

return CTFTeamPlayer;
