---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by darionco.
--- DateTime: 2021-03-21 11:04 p.m.
---

local require = _G.require;
local Propagator = require('components/propagator');
local CTFClassPatcher = use('scripts/CTFClassPatcher');
local CTF_CHARACTER_CONSTANTS = use('scripts/constants/CTFCharacterConstants');

local WILLOW = CTF_CHARACTER_CONSTANTS.WILLOW;

-- disable fire propagation
Propagator.StartSpreading = function() --[[ no op ]]  end

-- temporary method to not stunlock with the lighter
CTFClassPatcher(_G.EventHandler, function(self, ctor, name, fn)
    if name == 'attacked' then
        local new_fn = function(inst, data)
            if not data or not data.weapon or data.weapon.prefab ~= 'lighter' then
                fn(inst, data);
            end
        end
        ctor(self, name, new_fn);
    else
        ctor(self, name, fn);
    end
end);

local function onattack(inst, attacker, target)
    attacker.SoundEmitter:PlaySound('dontstarve/wilson/fireball_explo');

    if not target:IsValid() then
        --target killed or removed in combat damage phase
        return
    elseif target.components.burnable ~= nil and not target.components.burnable:IsBurning() then
        if target.components.freezable ~= nil and target.components.freezable:IsFrozen() then
            target.components.freezable:Unfreeze();
        elseif target.components.burnable.canlight or target.components.combat ~= nil and target.components.burnable.smolder_queue_length < WILLOW.LIGHTER_MAX_SMOLDER_STACKS then
            target.components.burnable:AddSmoldering(
                    WILLOW.LIGHTER_SMOLDER_TICK_COUNT,
                    WILLOW.LIGHTER_SMOLDER_TICK_TIME,
                    WILLOW.LIGHTER_SMOLDER_TICK_DAMAGE,
                    inst.prefab,
                    attacker
            );
        end
    end

    if target.components.freezable ~= nil then
        target.components.freezable:AddColdness(-1);
        if target.components.freezable:IsFrozen() then
            target.components.freezable:Unfreeze();
        end
    end

    if target.components.sleeper ~= nil and target.components.sleeper:IsAsleep() then
        target.components.sleeper:WakeUp();
    end

    if target.components.combat ~= nil then
        target.components.combat:SuggestTarget(attacker);
    end

    target:PushEvent('attacked', { attacker = attacker, damage = inst.components.weapon.damage, weapon = inst });
end

AddPrefabPostInit('lighter', function(inst)
    if inst.components then
        inst:RemoveComponent('fueled');
        inst:RemoveComponent('lighter');
        inst:RemoveComponent('cooker');

        if inst.components.weapon then
            inst.components.weapon:SetDamage(WILLOW.LIGHTER_HIT_DAMAGE);
            inst.components.weapon:SetRange(WILLOW.LIGHTER_ATTACK_RANGE_MIN, WILLOW.LIGHTER_ATTACK_RANGE_MAX);
            inst.components.weapon:SetOnAttack(onattack);
            inst.components.weapon:SetProjectile('fire_projectile');
        end

        if inst.components.equippable then
            inst.components.equippable.restrictedtag = 'pyromaniac';

            local OldOnEquip = inst.components.equippable.onequipfn;
            inst.components.equippable:SetOnEquip(function(f_inst, owner)
                OldOnEquip(f_inst, owner);
                if owner.components and owner.components.combat then
                    f_inst.ctf_old_attack_period = owner.components.combat.min_attack_period;
                    owner.components.combat:SetAttackPeriod(WILLOW.LIGHTER_ATTACK_PERIOD);
                end
            end);

            local OldOnUnequip = inst.components.equippable.onunequipfn;
            inst.components.equippable:SetOnUnequip(function(f_inst, owner)
                OldOnUnequip(f_inst, owner);
                if owner.components and owner.components.combat then
                    owner.components.combat:SetAttackPeriod(f_inst.ctf_old_attack_period or TUNING.WILSON_ATTACK_PERIOD);
                end
            end);
        end
    end
end);

AddPrefabPostInit('fire_projectile', function(inst)
    if inst.components and inst.components.projectile then
        inst.components.projectile:SetSpeed(35);
    end
end);
