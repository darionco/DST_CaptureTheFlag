---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by darionco.
--- DateTime: 2021-01-16 4:51 p.m.
---

local CTFTeamColors = {
    { 0.666, 0.407, 0.784, 1 },
    { 0.996, 1, 0.454, 1 },
    { 0.403, 0.756, 0.764, 1 },
    { 0.996, 0.674, 0.407, 1 },
    { 1, 0, 1, 1 },
}

local function TestWinState(inst, self)
    local player = FindClosestPlayerInRange(
            self.basePosition.x,
            self.basePosition.y,
            self.basePosition.z,
            10, -- range
            true -- is alive
    );
    if player ~= nil then
        local item = player.components.inventory:GetEquippedItem(GLOBAL.EQUIPSLOTS.BODY);
        if item ~= nil and item:HasTag('CTF_TEAM_FLAG') and not item:HasTag(self.teamTag) then
            c_announce('Team ' .. self.id .. ' wins!');
            c_announce('Game restarting in 10 seconds!');
            if self.winTask then
                self.winTask:Cancel();
                self.winTask = nil;
                TheWorld:DoTaskInTime(10, c_regenerateworld);
            end
        end
    end

    self.flag.AnimState:SetMultColour(self:getTeamColor(self.id));
end

CTFTeam = Class(function(self, id)
    self.id = id;
    self.teamTag = 'CTF_TEAM_' .. self.id;
    self.noTeamTag = 'NO_' .. self.teamTag;
    self.flag = nil;
    self.winTask = nil;
    self.players = {};
    self.playerCount = 0;
    self.basePosition = {
        x = 0,
        y = 0,
        z = 0,
    };
end);

function CTFTeam:getTeamColor(id)
    return unpack(CTFTeamColors[math.min(id, 5)]);
end

function CTFTeam:registerObject(obj, data)
    print('============================= REGISTERING TEAM OBJECT ' .. obj.prefab .. ' ==========================');
    obj:AddTag(self.teamTag);
    if obj.prefab == 'piggyback' then
        self.flag = obj;
        self.flag:AddTag('CTF_TEAM_FLAG');
        self.flag:AddTag(self.noTeamTag);

        local x, y, z = obj.Transform:GetWorldPosition();
        self.basePosition = { x= x, y = y, z = z };
        self.winTask = self.flag:DoPeriodicTask(0.25, TestWinState, nil, self);
    end

    if obj.components and obj.components.playerprox then
        local OldOnNear = obj.components.playerprox.onnear;
        local teamTag = self.teamTag;
        obj.components.playerprox:SetOnPlayerNear(function (inst, player)
            if not player:HasTag(teamTag) then
                OldOnNear(inst, player);
            end
        end);
    end
end

function CTFTeam:teleportPlayerToBase(player, setStats)
    c_teleport(self.basePosition.x, self.basePosition.y, self.basePosition.z, player);
    if setStats then
        c_supergodmode(player);
        c_maintainsanity(player, 1);
    end
end

function CTFTeam:teleportAllPlayersToBase(setStats)
    for _, v in ipairs(self.players) do
        self:teleportPlayerToBase(v, setStats);
    end
end

function CTFTeam:registerPlayer(player)
    player.components.itemtyperestrictions.ctfTeamTag = self.teamTag;
    player.components.itemtyperestrictions.noCtfTeamTag = self.noTeamTag;

    player:AddTag(self.teamTag);
    table.insert(self.players, player);

    if player.components.playercontroller then
        local OldGetActionButtonAction = player.components.playercontroller.GetActionButtonAction;
        local teamTag = self.teamTag;
        player.components.playercontroller.GetActionButtonAction = function(force_target)
            local result = OldGetActionButtonAction(force_target);
            if result and result.target and result.target:HasTag('CTF_TEAM_FLAG') and result.target:HasTag(teamTag) then
                local target = result.target;
                target:AddTag('fire');
                result = OldGetActionButtonAction(force_target)
                target:RemoveTag('fire');
            end
            return result;
        end
    end

    self.playerCount = self.playerCount + 1;
    player:ListenForEvent('death', function()
        c_announce(player.name .. ' will revive in 15 seconds');
        player:DoTaskInTime(15, function ()
            self:teleportPlayerToBase(player, false);
            c_godmode(player);
        end);
    end);

    player:ListenForEvent("ms_respawnedfromghost", function ()
        player.components.health:SetPercent(1);
        player.components.sanity:SetPercent(1);
        player.components.hunger:SetPercent(1);
        player.components.moisture:SetPercent(0);
        player.components.temperature:SetTemperature(25);
    end);

    --player:DoPeriodicTask(0.5, function()
        player.AnimState:SetMultColour(self:getTeamColor(self.id));
    --end);
end

function CTFTeam:hasPlayer(player)
    for i, v in ipairs(self.players) do
        if v == player then
            return true;
        end
    end
    return false;
end

function CTFTeam:removePlayer(player)
    for i, v in ipairs(self.players) do
        if v == player then
            c_announce(player.name .. ' has left team ' .. self.id);
            table.remove(self.players, i);
            self.playerCount = self.playerCount - 1;
            return;
        end
    end
end
